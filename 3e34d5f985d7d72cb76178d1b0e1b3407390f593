{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6f379d95_d82a4d5b",
        "filename": "Android.bp",
        "patchSetId": 12
      },
      "lineNbr": 601,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2022-05-25T17:55:37Z",
      "side": 0,
      "message": "Why move these from the bindgen module to the ffi module? This module won\u0027t work without them, so don\u0027t they go here?",
      "range": {
        "startLine": 598,
        "startChar": 0,
        "endLine": 601,
        "endChar": 6
      },
      "revId": "3e34d5f985d7d72cb76178d1b0e1b3407390f593",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdcc5933_9d84b7e9",
        "filename": "Android.bp",
        "patchSetId": 12
      },
      "lineNbr": 601,
      "author": {
        "id": 1836235
      },
      "writtenOn": "2022-05-25T18:25:39Z",
      "side": 0,
      "message": "I needed to add these dependencies in the `libbssl_ffi` target because it\u0027s now directly `include!`ing the generated source code, rather than depending on the generated crate and `pub use`-ing things. I happened to move them, rather than copying them.\n\nBut you\u0027re right, if anything depended on `libbssl_sys_raw` as a library (*), then these should be needed.  OTOH, `m libbssl_sys_raw` still works without them, which seems odd.  I\u0027ll try to dig more tomorrow.\n\n*: I guess nothing should depend on `libbssl_sys_raw` directly (instead of `libbssl_ffi`) so should we visibility-restrict it?",
      "parentUuid": "6f379d95_d82a4d5b",
      "range": {
        "startLine": 598,
        "startChar": 0,
        "endLine": 601,
        "endChar": 6
      },
      "revId": "3e34d5f985d7d72cb76178d1b0e1b3407390f593",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3c2ed59_2a32b7c8",
        "filename": "Android.bp",
        "patchSetId": 12
      },
      "lineNbr": 601,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2022-05-25T18:27:49Z",
      "side": 0,
      "message": "Everything in this file is default visibility restricted unless you expand its visibility. Is there a reason you chose to `include!` it rather than `pub use`ing it? We\u0027re generally trying to avoid `include!` when we can for 1p code.",
      "parentUuid": "fdcc5933_9d84b7e9",
      "range": {
        "startLine": 598,
        "startChar": 0,
        "endLine": 601,
        "endChar": 6
      },
      "revId": "3e34d5f985d7d72cb76178d1b0e1b3407390f593",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "819e134d_a2ab2eef",
        "filename": "Android.bp",
        "patchSetId": 12
      },
      "lineNbr": 601,
      "author": {
        "id": 1836235
      },
      "writtenOn": "2022-05-25T18:51:22Z",
      "side": 0,
      "message": "I was just trying to follow what the upstream CMakeLists.txt does here, but I guess there\u0027s no reason not to replace `${INCLUDES}` with `pub use bssl_sys_raw::*;` instead of `include!(...)` -- I\u0027ll have a go tomorrow.",
      "parentUuid": "d3c2ed59_2a32b7c8",
      "range": {
        "startLine": 598,
        "startChar": 0,
        "endLine": 601,
        "endChar": 6
      },
      "revId": "3e34d5f985d7d72cb76178d1b0e1b3407390f593",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}