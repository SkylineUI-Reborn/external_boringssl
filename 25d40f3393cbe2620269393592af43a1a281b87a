{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a355ac77_cc53de0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-05-08T21:45:18Z",
      "side": 1,
      "message": "Only the Android.bp and fully android-specific files should ever get patched directly on this repo - you should send everything else to upstream.",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6589bc0_6cf58bde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Makes sense, thank you!",
      "parentUuid": "a355ac77_cc53de0b",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb52ddf_b67caf56",
        "filename": "Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 854,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2024-05-08T22:08:22Z",
      "side": 1,
      "message": "Ideally we\u0027d use the new automatic thing, but I\u0027m guessing the idea is what we first get it working this way and then migrate? (That works for me, just double-checking.)",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c986779e_37fb7066",
        "filename": "Android.bp",
        "patchSetId": 4
      },
      "lineNbr": 854,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Yeah, that\u0027s my understanding as well!",
      "parentUuid": "ecb52ddf_b67caf56",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af55d35b_83ff6bf3",
        "filename": "src/rust/bssl-sys/Cargo.toml",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-05-08T21:45:18Z",
      "side": 1,
      "message": "Edits like this need to go upstream, not here",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c503eec0_2a5d9241",
        "filename": "src/rust/bssl-sys/Cargo.toml",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af55d35b_83ff6bf3",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b486d1e_c781d3a0",
        "filename": "src/rust/bssl-sys/Cargo.toml",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2024-05-08T22:08:22Z",
      "side": 1,
      "message": "For my understanding, what\u0027s the difference between a feature and a cfg here? I thought a cfg was sufficient, given cfg(soong), but I\u0027m probably confused.",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd3e5da0_f65f3695",
        "filename": "src/rust/bssl-sys/Cargo.toml",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-05-08T22:11:40Z",
      "side": 1,
      "message": "I don\u0027t think this should be needed either - specifying this would match `cfg(features \u003d \"unsupported_inline_wrappers\")`, which isn\u0027t used in the code. I was figuring we\u0027d review this more closely after we separated the portion bound for the boringssl gerrit.",
      "parentUuid": "2b486d1e_c781d3a0",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aad0c0ae_a53422f7",
        "filename": "src/rust/bssl-sys/Cargo.toml",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Ah, you are probably right -- I realize the `Cargo.toml` changes didn\u0027t get tested when running the AOSP build. I\u0027ll remove these in my CL to upstream boringssl.",
      "parentUuid": "cd3e5da0_f65f3695",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f135831_9f09bbbf",
        "filename": "src/rust/bssl-sys/Cargo.toml",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1943701
      },
      "writtenOn": "2024-05-10T09:29:56Z",
      "side": 1,
      "message": "\u003e For my understanding, what\u0027s the difference between a feature and a cfg here? I thought a cfg was sufficient, given cfg(soong), but I\u0027m probably confused.\n\nAs I understand it, all `--cfg` flags passed to `rustc` are the same thing: key-value pairs with the value being optional: https://doc.rust-lang.org/rustc/command-line-arguments.html#--cfg-configure-the-compilation-environment.\n\nThe Cargo features declared here become `cfg` directives too, matched with `#[cfg(feature \u003d \"unsupported_inline_wrappers\")]` as Matt writes above.\n\nThe difference between Cargo features and \"other cfgs\" is then that Cargo can enable the features for you, including enabling features when compiling dependencies: https://doc.rust-lang.org/cargo/reference/features.html#dependency-features. There is no such support for propagating (or not propagating) a `soong` cfg flag.",
      "parentUuid": "aad0c0ae_a53422f7",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21dd1f14_4e0229a5",
        "filename": "src/rust/bssl-sys/Cargo.toml",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2024-05-10T14:03:45Z",
      "side": 1,
      "message": "Yeah, we just want a `cfg` then. This is not \"unsupported because it\u0027s a new preview feature\". This is \"unsupported because it is a legacy mode that only exists because Android Rust didn\u0027t add the build system features that BoringSSL requires\". ðŸ˜Š\n\n(The build system features have since been added for one of your two build systems, so hopefully this can go away later.)",
      "parentUuid": "0f135831_9f09bbbf",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be933aaa_bbdd3e66",
        "filename": "src/rust/bssl-sys/rust_wrapper.h",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-05-08T21:45:18Z",
      "side": 1,
      "message": "As above, needs to go upstream",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "898da144_c4705e5d",
        "filename": "src/rust/bssl-sys/rust_wrapper.h",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be933aaa_bbdd3e66",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d52fcd2b_42f50f06",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-05-08T21:45:18Z",
      "side": 1,
      "message": "Upstream",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70946d32_e3c49c03",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2024-05-08T22:08:22Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "d52fcd2b_42f50f06",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86da382e_2d2c4f4d",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70946d32_e3c49c03",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "717a8cc1_80ffeb12",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2024-05-08T22:08:22Z",
      "side": 1,
      "message": "As this is intended for Soong anyway, I don\u0027t feel that strongly, but I opted for a bssl-sys-specific name in case other folks needed this and there were multiple things to jam in there.\n\nI thought there was some way to customize this name in the build.",
      "range": {
        "startLine": 16,
        "startChar": 40,
        "endLine": 16,
        "endChar": 48
      },
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c245fe7_bcc1797f",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Good question -- I just renamed it to `bindings.rs` because that was the name of the file being generated, but I\u0027m not sure if you can customize that. Maybe @ivanlozano@google.com would know?",
      "parentUuid": "717a8cc1_80ffeb12",
      "range": {
        "startLine": 16,
        "startChar": 40,
        "endLine": 16,
        "endChar": 48
      },
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0df1ff3_54cff2eb",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1115178
      },
      "writtenOn": "2024-05-09T01:30:26Z",
      "side": 1,
      "message": "These are the libbssl_sys_raw bindings? The output filename is controlled by the `source_stem` property in the corresponding `rust_bindgen` module, so you probably want to change them to the following:\n\n```\nrust_bindgen {\n    name: \"libbssl_sys_raw_nostd\",\n    source_stem: \"bssl_sys_bindings\",\n    //...\n}\n\nrust_bindgen {\n    name: \"libbssl_sys_raw_nostd\",\n    source_stem: \"bssl_sys_bindings\",\n    //...\n}\n```\n\n(See other comment)",
      "parentUuid": "6c245fe7_bcc1797f",
      "range": {
        "startLine": 16,
        "startChar": 40,
        "endLine": 16,
        "endChar": 48
      },
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2190f5d0_88d8b1c4",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-09T16:55:10Z",
      "side": 1,
      "message": "Thank you!",
      "parentUuid": "a0df1ff3_54cff2eb",
      "range": {
        "startLine": 16,
        "startChar": 40,
        "endLine": 16,
        "endChar": 48
      },
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d613794a_5465976c",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2024-05-08T22:08:22Z",
      "side": 1,
      "message": "This isn\u0027t actually true. :-) I think we actually need to mark this function as unsafe and all.\n\n...actually, a thought: is it possible to just do these as `use CBS_init_RUST as CBS_init` or whatever the spelling is.",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f87a84_2057826e",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-05-08T22:32:09Z",
      "side": 1,
      "message": "If the type signature is the same, that should work",
      "parentUuid": "d613794a_5465976c",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cb99404_95cf4c14",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2024-05-08T22:48:52Z",
      "side": 1,
      "message": "It should be. I mean, these are just identical versions of the original ones, just working around bindgen not processing them correctly. ðŸ˜Š",
      "parentUuid": "00f87a84_2057826e",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bda76e06_26c2e12d",
        "filename": "src/rust/bssl-sys/src/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-05-08T23:02:02Z",
      "side": 1,
      "message": "Makes sense! I\u0027m marking it as unsafe.\n\nAlso that\u0027s a good idea, I\u0027ll do that. I\u0027m leaving the other functions as wrappers though, since I think they should not be exported as `unsafe`.",
      "parentUuid": "d613794a_5465976c",
      "revId": "25d40f3393cbe2620269393592af43a1a281b87a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}