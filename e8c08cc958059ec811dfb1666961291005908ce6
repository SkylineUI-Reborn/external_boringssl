{
  "comments": [
    {
      "key": {
        "uuid": "c20fc22d_c130b856",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-08-10T22:35:43Z",
      "side": 1,
      "message": "This doesn\u0027t seem like a problem unique to these modules. Note that boringssl isn\u0027t even using that API. You cannot include cstdlib from modules using API levels this low at all after this change.\n\nIn the NDK, we solve this by having libandroid_support declare (but not define) a handful of functions: https://source.corp.google.com/android/ndk/sources/android/support/include/stdlib.h?q\u003dat_quick_exit\u0026ct\u003dos\u0026sq\u003dpackage:%5Eandroid$. This is essentially the same as not having any guard on the function.\n\nI wonder if having the availability-attribute-guarded decl makes this a non-issue. Otherwise, we should probably #ifdef the missing decls upstream in libc++.",
      "revId": "e8c08cc958059ec811dfb1666961291005908ce6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84b5a693_5ee14dfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-08-11T02:57:14Z",
      "side": 1,
      "message": "I wondered why this works for the non-vendor variant of the test lib. After some investigation, I found that it works because having a non-empty sdk_version makes the module to be compiled with the NDK headers that you mentioned. The NDK headers are however not provided when building the vendor variants. Previously (i.e. before the build system change in this topic), the vendor variant was incorrectly(?) built with -target aarch64-linux-android10000, regardless of the sdk_version setting. As a result, at_quick_exit etc were available to the vendor variant even without the NDK headers.\n\nFor now, I think we should keep building the vendor variants with 10000 although that might be incorrect. The extent of the regression would be greater than this as you said.\n\nAbandoning this change.",
      "parentUuid": "c20fc22d_c130b856",
      "revId": "e8c08cc958059ec811dfb1666961291005908ce6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}