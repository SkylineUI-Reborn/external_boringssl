// Note that some host libraries have the same module name as the target
// libraries. This is currently needed to build, for example, adb. But it's
// probably something that should be changed.

package {
    default_visibility: ["//visibility:public"],
}

// Pull in the autogenerated sources modules
build = ["sources.bp"]

// Used by libcrypto, libssl, bssl tool, and native tests
cc_defaults {
    name: "boringssl_flags",
    vendor_available: true,

    cflags: [
        "-fvisibility=hidden",
        "-DBORINGSSL_SHARED_LIBRARY",
        "-DBORINGSSL_ANDROID_SYSTEM",
        "-DOPENSSL_SMALL",
        "-D_XOPEN_SOURCE=700",
        "-Werror",
        "-Wno-unused-parameter",
    ],

    cppflags: [
        "-Wall",
        "-Werror",
    ],

    conlyflags: ["-std=c99"],

    // Build BoringSSL and its tests against the same STL.
    sdk_version: "9",
    target: {
        android: {
            stl: "libc++_static",
        },
    },
}

// Used by libcrypto + libssl
cc_defaults {
    name: "boringssl_defaults",

    local_include_dirs: ["src/include"],
    export_include_dirs: ["src/include"],
    cflags: ["-DBORINGSSL_IMPLEMENTATION"],
}

//// libcrypto
cc_defaults {
    name: "libcrypto_defaults",
    host_supported: true,

    // Windows and Macs both have problems with assembly files
    target: {
        windows: {
            enabled: true,
            cflags: ["-DOPENSSL_NO_ASM"],
            host_ldlibs: ["-lws2_32"],
        },
        darwin: {
            cflags: ["-DOPENSSL_NO_ASM"],
        },
        host: {
            host_ldlibs: ["-lpthread"],
        },
    },

    local_include_dirs: ["src/crypto"],

    arch: {
        arm64: {
            clang_asflags: ["-march=armv8-a+crypto"],
        },
    },
    // To allow integrity check to read and checksum the code
    xom: false,
}

cc_object {
    name: "bcm_object",
    device_supported: true,
    host_supported: false,
    compile_multilib: "64",
    defaults: [
        "libcrypto_bcm_sources",
        "libcrypto_defaults",
        "boringssl_defaults",
        "boringssl_flags",
    ],
    cflags: [
        "-DBORINGSSL_FIPS",
    ],
}

cc_genrule {
    name: "bcm_object_hashable",
    device_supported: true,
    host_supported: false,
    compile_multilib: "64",
    srcs: [
        ":bcm_object",
    ],
    out: [
        "bcm_object_hashable.o",
    ],
    tool_files: [
        "src/crypto/fipsmodule/fips_shared.lds",
    ],
    // Aspirational:-
    // cmd: "ld -r -T $(location) --whole-archive -o $(out) $(in)",
    cmd: "cp $(in) $(out)",
}

//// FIPS crypto module
cc_library_static {
    name: "libbcm",
    defaults: [
        "libcrypto_defaults",
        "boringssl_defaults",
        "boringssl_flags",
    ],
    recovery_available: true,
    target: {
        linux_arm64: {
            cflags: [
                "-DBORINGSSL_FIPS",
            ],
            srcs: [
                "src/crypto/fipsmodule/fips_shared_support.c",
                // Hack until bcm_object_hashable actually contains these symbols
                "src/crypto/fipsmodule/fips_xxx_temp_hack.c",
                ":bcm_object_hashable",
            ],
        },
        linux_arm: {
            srcs: [
                "linux-arm/crypto/chacha/chacha-armv4.S",
                "linux-arm/crypto/fipsmodule/aes-armv4.S",
                "linux-arm/crypto/fipsmodule/aesv8-armx32.S",
                "linux-arm/crypto/fipsmodule/armv4-mont.S",
                "linux-arm/crypto/fipsmodule/bsaes-armv7.S",
                "linux-arm/crypto/fipsmodule/ghash-armv4.S",
                "linux-arm/crypto/fipsmodule/ghashv8-armx32.S",
                "linux-arm/crypto/fipsmodule/sha1-armv4-large.S",
                "linux-arm/crypto/fipsmodule/sha256-armv4.S",
                "linux-arm/crypto/fipsmodule/sha512-armv4.S",
                "linux-arm/crypto/test/trampoline-armv4.S",
                "src/crypto/curve25519/asm/x25519-asm-arm.S",
                "src/crypto/poly1305/poly1305_arm_asm.S",
            ],
        },
        linux_x86: {
            srcs: [
                "linux-x86/crypto/chacha/chacha-x86.S",
                "linux-x86/crypto/fipsmodule/aes-586.S",
                "linux-x86/crypto/fipsmodule/aesni-x86.S",
                "linux-x86/crypto/fipsmodule/bn-586.S",
                "linux-x86/crypto/fipsmodule/co-586.S",
                "linux-x86/crypto/fipsmodule/ghash-ssse3-x86.S",
                "linux-x86/crypto/fipsmodule/ghash-x86.S",
                "linux-x86/crypto/fipsmodule/md5-586.S",
                "linux-x86/crypto/fipsmodule/sha1-586.S",
                "linux-x86/crypto/fipsmodule/sha256-586.S",
                "linux-x86/crypto/fipsmodule/sha512-586.S",
                "linux-x86/crypto/fipsmodule/vpaes-x86.S",
                "linux-x86/crypto/fipsmodule/x86-mont.S",
                "linux-x86/crypto/test/trampoline-x86.S",
            ],
        },
        linux_x86_64: {
            srcs: [
                "linux-x86_64/crypto/chacha/chacha-x86_64.S",
                "linux-x86_64/crypto/cipher_extra/aes128gcmsiv-x86_64.S",
                "linux-x86_64/crypto/cipher_extra/chacha20_poly1305_x86_64.S",
                "linux-x86_64/crypto/fipsmodule/aes-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/aesni-gcm-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/aesni-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/ghash-ssse3-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/ghash-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/md5-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/p256-x86_64-asm.S",
                "linux-x86_64/crypto/fipsmodule/p256_beeu-x86_64-asm.S",
                "linux-x86_64/crypto/fipsmodule/rdrand-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/rsaz-avx2.S",
                "linux-x86_64/crypto/fipsmodule/sha1-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/sha256-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/sha512-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/vpaes-x86_64.S",
                "linux-x86_64/crypto/fipsmodule/x86_64-mont.S",
                "linux-x86_64/crypto/fipsmodule/x86_64-mont5.S",
                "linux-x86_64/crypto/test/trampoline-x86_64.S",
                "src/crypto/hrss/asm/poly_rq_mul.S",
            ],
        },
    },
}

// Target and host library
cc_library {
    name: "libcrypto",
    visibility: ["//visibility:public"],
    vendor_available: true,
    native_bridge_supported: true,
    vndk: {
        enabled: true,
    },
    double_loadable: true,
    recovery_available: true,
    defaults: [
        "libcrypto_sources",
        "libcrypto_defaults",
        "boringssl_defaults",
        "boringssl_flags",
    ],
    whole_static_libs: [
        "libbcm",
    ],
    unique_host_soname: true,
    target: {
        android: {
            cflags: [
                "-DBORINGSSL_FIPS",
            ],
            // Post-processing step here: Inject the actual checksum.
            // Essentially:-
            // util/fipstools/inject_hash/inject_hash.go -o $OUT -in-object $OUT
            // If we can't run Go tools under Soong we could adapt that to do something
            // simpler in Python, e.g. look for a magic string in the .so and write
            // the checksum there rather than parsing all the whole sections and symbols.
        },
    },
}

// Static library
// This should only be used for host modules that will be in a JVM, all other
// modules should use the static variant of libcrypto.
cc_library_static {
    name: "libcrypto_static",
    visibility: ["//visibility:public"],
    defaults: [
        "libcrypto_sources",
        "libcrypto_defaults",
        "boringssl_defaults",
        "boringssl_flags",
    ],

    target: {
        host: {
            // TODO: b/26160319. ASAN breaks use of this library in JVM.
            // Re-enable sanitization when the issue with making clients of this library
            // preload ASAN runtime is resolved. Without that, clients are getting runtime
            // errors due to unresolved ASAN symbols, such as
            // __asan_option_detect_stack_use_after_return.
            sanitize: {
                never: true,
            },
        },
        android: {
            cflags: [
                "-DBORINGSSL_FIPS",
            ],
        },
    },
    whole_static_libs: [
        "libbcm",
    ],
}

//// libssl

// Target static library
// Deprecated: all users should move to libssl
cc_library_static {
    name: "libssl_static",
    visibility: ["//visibility:public"],
    defaults: [
        "libssl_sources",
        "boringssl_defaults",
        "boringssl_flags",
    ],
}

// Static and Shared library
cc_library {
    name: "libssl",
    visibility: ["//visibility:public"],
    recovery_available: true,
    vendor_available: true,
    native_bridge_supported: true,
    vndk: {
        enabled: true,
    },
    host_supported: true,
    defaults: [
        "libssl_sources",
        "boringssl_defaults",
        "boringssl_flags",
    ],
    unique_host_soname: true,

    shared_libs: ["libcrypto"],
}

// Tool
cc_binary {
    name: "bssl",
    host_supported: true,
    defaults: [
        "bssl_sources",
        "boringssl_flags",
    ],

    shared_libs: [
        "libcrypto",
        "libssl",
    ],
    target: {
        darwin: {
            enabled: false,
        },
    },
}

cc_binary {
    name: "cavp",
    host_supported: true,
    srcs: [
        "src/fipstools/cavp_aes_gcm_test.cc",
        "src/fipstools/cavp_aes_test.cc",
        "src/fipstools/cavp_ctr_drbg_test.cc",
        "src/fipstools/cavp_ecdsa2_keypair_test.cc",
        "src/fipstools/cavp_ecdsa2_pkv_test.cc",
        "src/fipstools/cavp_ecdsa2_siggen_test.cc",
        "src/fipstools/cavp_ecdsa2_sigver_test.cc",
        "src/fipstools/cavp_hmac_test.cc",
        "src/fipstools/cavp_kas_test.cc",
        "src/fipstools/cavp_keywrap_test.cc",
        "src/fipstools/cavp_main.cc",
        "src/fipstools/cavp_rsa2_keygen_test.cc",
        "src/fipstools/cavp_rsa2_siggen_test.cc",
        "src/fipstools/cavp_rsa2_sigver_test.cc",
        "src/fipstools/cavp_sha_monte_test.cc",
        "src/fipstools/cavp_sha_test.cc",
        "src/fipstools/cavp_tdes_test.cc",
        "src/fipstools/cavp_test_util.cc",
        "src/fipstools/cavp_tlskdf_test.cc",
    ],

    shared_libs: [
        "libcrypto",
    ],

    defaults: [
        "boringssl_test_support_sources",
        "boringssl_flags",
    ],
}

// Test support library
cc_library_static {
    name: "boringssl_test_support",
    host_supported: true,
    defaults: [
        "boringssl_test_support_sources",
        "boringssl_flags",
    ],

    shared_libs: [
        "libcrypto",
        "libssl",
    ],
}

// Tests
cc_test {
    name: "boringssl_crypto_test",
    test_suites: ["device-tests"],
    host_supported: true,
    defaults: [
        "boringssl_crypto_test_sources",
        "boringssl_flags",
    ],
    whole_static_libs: ["boringssl_test_support"],

    shared_libs: ["libcrypto"],
}

cc_test {
    name: "boringssl_ssl_test",
    test_suites: ["device-tests"],
    host_supported: true,
    defaults: [
        "boringssl_ssl_test_sources",
        "boringssl_flags",
    ],
    whole_static_libs: ["boringssl_test_support"],

    shared_libs: [
        "libcrypto",
        "libssl",
    ],
}
