{
  "comments": [
    {
      "key": {
        "uuid": "b01b5e4e_fc25f333",
        "filename": "src/crypto/fipsmodule/rand/urandom.c",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1014807
      },
      "writtenOn": "2019-10-03T17:56:19Z",
      "side": 1,
      "message": "It seems that this breaks http://ab/aosp-build-tools and http://ab/aosp-clang-tools with following message:\n\n    Undefined symbols for architecture x86_64:\n    \"___isOSVersionAtLeast\", referenced from:",
      "revId": "470a930d9734686d23d8e4cba31c7319d47b915b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de39b65a_bfa9e498",
        "filename": "src/crypto/fipsmodule/rand/urandom.c",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2019-10-03T18:16:43Z",
      "side": 1,
      "message": "The build is failing to link the compiler runtime(*), or is linking the wrong version of the runtime library for the compiler version. If fixing the build is implausible, does it build for you if this is additionally guarded by \"\u0026\u0026 !defined(OPENSSL_ANDROID)\"? If so, we could just disable this for Android and call it a day.\n\n(*) E.g. https://compiler-rt.llvm.org for Clang",
      "parentUuid": "b01b5e4e_fc25f333",
      "revId": "470a930d9734686d23d8e4cba31c7319d47b915b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7122c202_59b0675f",
        "filename": "src/crypto/fipsmodule/rand/urandom.c",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1334152
      },
      "writtenOn": "2019-10-03T18:23:27Z",
      "side": 1,
      "message": "I\u0027m hoping https://android-review.googlesource.com/c/platform/external/boringssl/+/1133209 will fix this.  If not then then I\u0027ll go the OPENSSL_ANDROID route.",
      "parentUuid": "de39b65a_bfa9e498",
      "revId": "470a930d9734686d23d8e4cba31c7319d47b915b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8df305ca_b5961bd9",
        "filename": "src/crypto/fipsmodule/rand/urandom.c",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-10-03T21:15:59Z",
      "side": 1,
      "message": "This is failing for the mac host build, so !defined(OPENSSL_ANDROID) doesn\u0027t help.  It\u0027s failing because we pass -nodefaultlibs so we can override the STL, but that is removing prebuilts/clang/host/darwin-x86/clang-r365631b//lib64/clang/9.0.7/lib/darwin/libclang_rt.osx.a from the command line too.",
      "parentUuid": "7122c202_59b0675f",
      "revId": "470a930d9734686d23d8e4cba31c7319d47b915b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aacd8f5_e5bee835",
        "filename": "src/crypto/fipsmodule/rand/urandom.c",
        "patchSetId": 4
      },
      "lineNbr": 186,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2019-10-04T06:17:45Z",
      "side": 1,
      "message": "Fixed the mac build with https://r.android.com/q/topic:%22nostdlib%252B%252B%22+(status:open%20OR%20status:merged), which replaces -nodefaultlibs with -nostdlib++, so we still get the default libclang_rt.osx.a.",
      "parentUuid": "8df305ca_b5961bd9",
      "revId": "470a930d9734686d23d8e4cba31c7319d47b915b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}